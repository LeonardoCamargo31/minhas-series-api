swagger: "2.0"
info:
  description: "Este documento é referente a API do Minhas séries."
  version: "1.0.0"
  title: "Minhas séries API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "leonardo_camargo31@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "series"
  description: "Gerencie suas séries"
- name: "user"
  description: "Gerencie seus usuários"
- name: "auth"
  description: "Autenticação"
schemes:
- "https"
- "http"
paths:
  /series:
    get:
      tags:
        - "serie"
      summary: "Retorna todas as séries"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Serie"
        400:
          description: "Invalid status value"
      security:
      - api_key:
        - "restrito"
    post:
      tags:
      - "serie"
      summary: "Cria uma nova série"
      description: ""
      operationId: "addSerie"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Série que desejamos criar"
        required: true
        schema:
          $ref: "#/definitions/Serie"
      responses:
        405:
          description: "Invalid input"
      security:
        - api_key:
          - "restrito"
    put:
      tags:
      - "serie"
      summary: "Atualizar uma série existente"
      description: ""
      operationId: "updateSerie"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
        - api_key:
          - "restrito"
  /series/{serieId}:
    get:
      tags:
      - "serie"
      summary: "Procurar série por id"
      description: "Retorna a série"
      operationId: "getSerieById"
      produces:
      - "application/json"
      parameters:
      - name: "serieId"
        in: "path"
        description: "Id da série a ser retornada"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Serie"
        400:
          description: "Invalid status value"
      security:
        - api_key:
          - "restrito"
  /auth:
    post:
      tags:
      - "user"
      summary: "Autenticação"
      description: "Realizar autenticação"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Usuário e senha para realizar a autenticação"
        required: true
        schema:
          $ref: "#/definitions/User"
          example:
            username: teste
            password: 123
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-access-token"
    in: "header"
    scopes:
      restrito: acesso restrito
      admin: administrador
definitions:
  Serie:
    type: "object"
    properties: 
      _id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"